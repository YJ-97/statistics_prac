scale_y_continuous(breaks=c(50000, 100000, 150000, 200000),
labels=c("$50k", "$100k", "$150k", "$200k")) +
scale_fill_discrete(name="gender") +
theme(legend.position = "bottom")
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
scale_x_discrete(breaks=c("AsstProf", "AssocProf", "Prof"),
labels=c("Assistant\nProfessor",
"Associate\nProfessor",
"Professor")) +
scale_y_continuous(breaks=c(50000, 100000, 150000, 200000),
labels=c("$50k", "$100k", "$150k", "$200k")) +
scale_fill_discrete(name="gender") +
theme(legend.position = "none")
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
scale_x_discrete(breaks=c("AsstProf", "AssocProf", "Prof"),
labels=c("Assistant\nProfessor",
"Associate\nProfessor",
"Professor")) +
scale_y_continuous(breaks=c(50000, 100000, 150000, 200000),
labels=c("$50k", "$100k", "$150k", "$200k")) +
scale_fill_discrete(name="gender") +
theme(legend.position = c(0.15, 0.85))
data(mtcars)
head(mtcars)
ggplot(mtcars, aes(x=wt, y=mpg,
color=factor(cyl), shape=factor(cyl))) +
geom_point()
ggplot(mtcars, aes(x=wt, y=mpg,
color=factor(cyl), shape=factor(cyl))) +
geom_point() +
labs(shape="Cylinder", color="Cylinder")
ggplot(mtcars, aes(x=wt, y=mpg,
color=factor(cyl), shape=factor(cyl))) +
geom_point() +
scale_color_discrete(name="Cylinder") +
scale_shape_discrete(name="Cylinder")
ggplot(mtcars, aes(x=wt, y=mpg, size=disp)) +
geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, size=disp)) +
geom_point(shape=21, color="black", fill="wheat")
ggplot(mtcars, aes(x=wt, y=mpg, size=disp)) +
geom_point(shape=21, color="black", fill="wheat") +
labs(size="Engine Displacement")
ggplot(mtcars, aes(x=wt, y=mpg, size=disp)) +
geom_point(shape=21, color="black", fill="wheat") +
labs(size="Engine\nDisplacement")
ggplot(mtcars, aes(x=wt, y=mpg, size=disp)) +
geom_point(shape=21, color="black", fill="wheat") +
scale_size_continuous(name="Engine\nDisplacement")
str(Salaries)
ggplot(Salaries, aes(x=rank, fill=sex)) +
geom_bar()
ggplot(Salaries, aes(x=rank, fill=sex)) +
geom_bar() +
scale_fill_manual(values=c("tomato", "cornflowerblue"))
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank)) +
geom_point()
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank)) +
geom_point() +
scale_color_manual(values=c("tomato", "cornflowerblue"))
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank)) +
geom_point(size=2) +
scale_color_manual(values=c("orange", "violetred", "steelblue"))
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank)) +
geom_point(size=2) +
scale_color_brewer(palette="Accent")
?RColorBrewer
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank)) +
geom_point(size=2) +
scale_color_brewer(palette="Set1")
ggplot(mtcars, aes(x=wt, y=mpg, color=disp)) +
geom_point()
ggplot(mtcars, aes(x=wt, y=mpg, color=disp)) +
geom_point() +
scale_colo_gradient2()
ggplot(mtcars, aes(x=wt, y=mpg, color=disp)) +
geom_point() +
scale_color_gradient2()
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank)) +
geom_point(size=2)
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank, shape=rank)) +
geom_point(size=2) +
scale_x_discrete()
ggplot(Salaries, aes(x=yrs.since.phd , y=salary,
color=rank, shape=rank)) +
geom_point(size=2) +
scale_shape_manual(values=c(15,17,19))
library(ggplot2)
library(car)
str(Salaries)
ggplot(Salaries, aes(x=yrs.since.phdm y=salary,
color=rank, shpae=rank)) +
geom_point() +
facet_grid(. ~ sex)
ggplot(Salaries, aes(x=yrs.since.phd, y=salary,
color=rank, shpae=rank)) +
geom_point() +
facet_grid(. ~ sex)
ggplot(Salaries, aes(x=yrs.since.phd, y=salary,
color=rank, shpae=rank)) +
geom_point() +
facet_grid(. ~ sex) +
theme_gray()
?theme_gray
??theme_gray
library(ggplot2)
library(car)
str(Salaries)
ggplot(Salaries, aes(x=yrs.since.phd, y=salary,
color=rank, shpae=rank)) +
geom_point() +
facet_grid(. ~ sex) +
theme_gray()
?theme_gray
ggplot(Salaries, aes(x=yrs.since.phd, y=salary,
color=rank, shpae=rank)) +
geom_point() +
facet_grid(. ~ sex) +
theme_bw()
ggplot(Salaries, aes(x=yrs.since.phd, y=salary,
color=rank, shpae=rank)) +
geom_point() +
facet_grid(. ~ sex) +
theme_light()
ggplot(Salaries, aes(x=yrs.since.phd, y=salary,
color=rank, shpae=rank)) +
geom_point() +
facet_grid(. ~ sex) +
theme_dark()
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary")
?theme()
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary") +
theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"))
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary") +
theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"),
axis.title=element_text(face="bold.italic",
size=10, color="tomato"))
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary") +
theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"),
axis.title=element_text(face="bold.italic",
size=10, color="tomato"),
axis.text=element_text(face="bold",
size=9, color="royalblue")))
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary") +
theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"),
axis.title=element_text(face="bold.italic",
size=10, color="tomato"),
axis.text=element_text(face="bold",
size=9, color="royalblue"))
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary") +
theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"),
axis.title=element_text(face="bold.italic",
size=10, color="tomato"),
axis.text=element_text(face="bold",
size=9, color="royalblue"),
panel.background=element_rect(fill="snow", color="darkblue"))
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary") +
theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"),
axis.title=element_text(face="bold.italic",
size=10, color="tomato"),
axis.text=element_text(face="bold",
size=9, color="royalblue"),
panel.background=element_rect(fill="snow", color="darkblue"),
panel.grid.major.y =element_line(color="gray", linetype="solid"),
panel.grid.minor.y =element_line(color="gray", linetype="dashed"))
ggplot(Salaries, aes(x=rank, y=salary, fill=sex)) +
geom_boxplot() +
labs(title="Salary by Rank and Sex",
x="Rank", y="Salary") +
theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"),
axis.title=element_text(face="bold.italic",
size=10, color="tomato"),
axis.text=element_text(face="bold",
size=9, color="royalblue"),
panel.background=element_rect(fill="snow", color="darkblue"),
panel.grid.major.y =element_line(color="gray", linetype="solid"),
panel.grid.minor.y =element_line(color="gray", linetype="dashed"),
legend.position = "top")
mytheme <- theme(plot.title=element_text(face="bold.italic",
size=14, color="brown"),
axis.title=element_text(face="bold.italic",
size=10, color="tomato"),
axis.text=element_text(face="bold",
size=9, color="royalblue"),
panel.background=element_rect(fill="snow", color="darkblue"),
panel.grid.major.y =element_line(color="gray", linetype="solid"),
panel.grid.minor.y =element_line(color="gray", linetype="dashed"),
legend.position = "top")
library(lattice)
ggplot(singer, aes(x=voice.part, y=height)) +
geom_boxplot()
ggplot(singer, aes(x=voice.part, y=height)) +
geom_boxplot() +
labs(title="Height by voice part",
x="Voice Part", y="Height")
ggplot(singer, aes(x=voice.part, y=height)) +
geom_boxplot() +
labs(title="Height by voice part",
x="Voice Part", y="Height") +
mytheme
library(ggplot2)
library(car)
str(Salaries)
ggplot(Salaries, aes(x-rank)) +
geom_bar(fill="steelblue")
ggplot(Salaries, aes(x=rank)) +
geom_bar(fill="steelblue")
install.packages("gridExtra")
library(gridExtra)
ggplot(Salaries, aes(x=rank)) +
geom_bar(fill="steelblue")
ggplot(Salaries, aes(x=rank)) +
geom_histogram(fill="maroon")
ggplot(Salaries, aes(x=salary)) +
geom_histogram(fill="maroon")
ggplot(Salaries, aes(x=yrs.since.phd, y=salary)) +
geom_point(fill="orange")
ggplot(Salaries, aes(x=yrs.since.phd, y=salary)) +
geom_point(color="orange")
source("~/.active-rstudio-document", echo=TRUE)
install.packages("gridExtra")
ggplot(Salaries, aes(x=rank, y=salary)) +
geom_boxplot(fill="mistyrose")
ggplot(Salaries, aes(x=rank, y=salary)) +
geom_boxplot(fill="mistyrose")
library(ggplot2)
library(car)
ggplot(Salaries, aes(x=rank, y=salary)) +
geom_boxplot(fill="mistyrose")
library(gridExtra)
grid.arrnage()
grid.arrange()
p1 <- ggplot(Salaries, aes(x=rank)) +
geom_bar(fill="steelblue")
p2 <- ggplot(Salaries, aes(x=salary)) +
geom_histogram(fill="maroon")
p3 <- ggplot(Salaries, aes(x=yrs.since.phd, y=salary)) +
geom_point(color="orange")
p4 <- ggplot(Salaries, aes(x=rank, y=salary)) +
geom_boxplot(fill="mistyrose")
grid.arrange(p1, p2, p3, p4, nrow=2, ncol=2)
myggplot <- grid.arrange(p1, p2, p3, p4, nrow=2, ncol=2)
?ggsave
ggsave(file="myplot.png", plot=myggplot,
width=7.0, height=5.5)
getwd()
setwd(D:\R)
setwd(D\R)
setwd(D\\R)
setwd("D:\R")
setwd("D:/ubion/statistics_prac")
Job <- scan()
# 평균
n <- length(Job)
sum(Job)/n
mean(Job)
# 가중평균
x <- c(0.28, -0.28)
w <- c(700, 300)
weighted.mean(x, w)
# 중앙값
median(Job)
# 중앙값
median(Job)
# 절사평균
mean(Job, trim=0.1)
mean(Job, trim=0)
mean(Job, trim=0.5)
# 순서통계량
Job <- sort(Job)
trim <- c(1:3, (n-2):n)
trim
mean(Job[-trim])
# 최빈값
mode(Job)
freq = table(Job)
freq <- table(Job)
maxfrea <- max(freq)
maxfreq <- max(freq)
which(freq == maxfreq)
# 범위
ends <- range(Job)
ends
diff(ends)
max(job) - min(Job)
max(Job) - min(Job)
# 사분위수
quantile(JOb)
# 사분위수
quantile(Job)
Q <- quantile(Job, probs=c(0.25, 0.5, 0.75))
IQR(Job)
Q
IQR(Job)
Q[3] - Q[1]
# 상자그림
boxplot(Job)
boxplot(Job, horizontal=TRUE, xlab='취업률')
# 분산 & 표준편차
var(Job)
sd(Job)
# 표준화
xbar <- mean(Job)
s <- sd(Job)
z <- (Job-xbar)/s
scale(Job)
z
# 절대편차평균
abdev <- abs(Job - median(Job))
sum(abdev)/(n-1)
# 변동계수
sd(Job)/mean(Job)
# 왜도 & 첨도
skewness <- sum(z^3)/(n-1)
kurtosis <- sum(z^4)/(n-1)
skewness
kurtosis
kurtosis <- sum(z^4)/(n-1)-3
kurtosis
dist.shape <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- sum(z^3)/(n-1)
kurt <- sum(z^4)/(n-1)
result <- c(skew, kurt)
}
return(result)
}
dist.shape
dist.shape(Job)
kurt <- sum(z^4)/(n-1)-3
return(result)
dist.shape <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- sum(z^3)/(n-1)
kurt <- sum(z^4)/(n-1)-3
result <- c(skew, kurt)
}
return(result)
}
dist.shape(Job)
dist.shape <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- (n*sum(z^3))/((n-1)*(n-2))
kurt <- (n*(n+1)*sum(z^4)/((n-1)*(n-2)*(n-3)) - (3*(n-1)^2)/(n-2)*(n-3))
result <- c(skew, kurt)
}
return(result)
}
dist.shape(Job)
dist.shape <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- (n*sum(z^3))/((n-1)*(n-2))
kurt <- (n*(n+1)*sum(z^4)/((n-1)*(n-2)*(n-3)) - (3*((n-1)^2))/(n-2)*(n-3))
result <- c(skew, kurt)
}
return(result)
}
dist.shape(Job)
kurt <- ((n*(n+1)*sum(z^4))/((n-1)*(n-2)*(n-3))) - (3*((n-1)^2))/(n-2)*(n-3))
dist.shape <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- (n*sum(z^3))/((n-1)*(n-2))
kurt <- ((n*(n+1)*sum(z^4))/((n-1)*(n-2)*(n-3))) - (3*((n-1)^2))/(n-2)*(n-3))
kurt <- ((n*(n+1)*sum(z^4))/((n-1)*(n-2)*(n-3))) - ((3*((n-1)^2))/((n-2)*(n-3)))
dist.shape <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- (n*sum(z^3))/((n-1)*(n-2))
kurt <- ((n*(n+1)*sum(z^4))/((n-1)*(n-2)*(n-3))) - ((3*((n-1)^2))/((n-2)*(n-3)))
result <- c(skew, kurt)
}
return(result)
}
dist.shape(Job)
## 과제 1
# 'hit.txt'의 자료를 불러오기 : 연도별 프로야구 최고 타율
# 표본평균, 표본중앙값, 최댓값과 최솟값을 제외한 평균 계산
# 상자그림, 분산, 변동계수 계산
hit <- read.csv('/dataset/hit.txt', encoding='utf-8')
## 과제 1
# 'hit.txt'의 자료를 불러오기 : 연도별 프로야구 최고 타율
# 표본평균, 표본중앙값, 최댓값과 최솟값을 제외한 평균 계산
# 상자그림, 분산, 변동계수 계산
hit <- read.csv('./dataset/hit.txt', encoding='utf-8')
hit
mean(hit)
table(hit)
n <- length(hit)
sum(hit)/n
mean(hit)
summary(hit)
type(hit)
dtype(hit)
mode(hit)
hit.isnumeric()
hit.is.numeric()
is.numeric(hit)
class(hit)
typeof(hit)
median(hit)
hit
hit <- hit[1:]
hit <- hit[1:,1]
hit[1]
hit <- hit[1]
hit
mean(hit)
class(hit)
hit <- as.numeric(hit)
hit <- unlist(hit)
hit
mean(hit)
median(hit)
hit <- sort(hit)
hit
hit[0]
hit[1]
hit[1:-1]
len(hit)
length(hit)
hit[c(1, 34)]
hit[-c(1, 34)]
length(hit[-c(1, 34)])
mean(hit[-c(1, 34)])
# 상자그림
boxplot(hit)
# 분산
sd(hit)
source("~/.active-rstudio-document", echo=TRUE)
# 분산
var(hit)
sd(hit)
sd(hit)/mean(hit)
dist.shape(hit)
dist.shape <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- sum(z^3)/(n-1)
kurt <- sum(z^4)/(n-1)-3
result <- c(skew, kurt)
}
return(result)
}
dist.shape1 <- function(x){
n <- length(z)
result <- c(NA, NA)
if (n >= 2){
z <- (x-mean(x))/sd(x)
skew <- (n*sum(z^3))/((n-1)*(n-2))
kurt <- ((n*(n+1)*sum(z^4))/((n-1)*(n-2)*(n-3))) - ((3*((n-1)^2))/((n-2)*(n-3)))
result <- c(skew, kurt)
}
return(result)
}
dist.shape(hit)
dist.shape1(hit)
